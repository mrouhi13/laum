# Generated by Django 2.2.2 on 2019-07-02 18:02

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import web.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='updated on')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='created on')),
                ('pid', models.CharField(db_index=True, default=web.models.generate_pid, max_length=16, unique=True, verbose_name='public ID')),
                ('title', models.CharField(db_index=True, max_length=128, verbose_name='title')),
                ('subtitle', models.CharField(blank=True, db_index=True, max_length=128, verbose_name='subtitle')),
                ('content', models.TextField(db_index=True, max_length=1024, verbose_name='content')),
                ('event', models.CharField(blank=True, db_index=True, help_text='Date of an important event for the subject entered along with the place of occurrence.', max_length=128, verbose_name='event')),
                ('image', models.ImageField(blank=True, upload_to='images', verbose_name='image')),
                ('image_caption', models.CharField(blank=True, db_index=True, help_text='A brief description of the location and history of the photo.', max_length=128, verbose_name='image caption')),
                ('reference', models.CharField(blank=True, help_text="The name of the book, newspaper, magazine or website address, blog and ... along with the author's name.", max_length=128, verbose_name='reference')),
                ('website', models.URLField(blank=True, verbose_name='website')),
                ('author', models.EmailField(blank=True, max_length=254, verbose_name='author email')),
                ('is_active', models.BooleanField(default=False, help_text='Designate whether the page is visible on the list of results.', verbose_name='active status')),
            ],
            options={
                'verbose_name': 'page',
                'verbose_name_plural': 'pages',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='updated on')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='created on')),
                ('name', models.CharField(db_index=True, max_length=20, unique=True, verbose_name='name')),
                ('keyword', models.SlugField(allow_unicode=True, verbose_name='keyword')),
                ('is_active', models.BooleanField(default=True, help_text='Designate whether the tag can be used.', verbose_name='active status')),
            ],
            options={
                'verbose_name': 'tag',
                'verbose_name_plural': 'tags',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='updated on')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='created on')),
                ('refid', models.CharField(max_length=32, null=True, unique=True, verbose_name='reference ID')),
                ('body', models.TextField(max_length=1024, verbose_name='body')),
                ('reporter', models.EmailField(max_length=254, verbose_name='reporter email')),
                ('description', models.TextField(blank=True, help_text='A description if need to recall in the future. Also, if the report is denied, the content of this field will be sent to the user.', max_length=1024, verbose_name='description')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('denied', 'Denied')], default='pending', help_text='Be careful when determining the status. This field only is set once.', max_length=32, verbose_name='status')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='web.Page', to_field='pid', verbose_name='page')),
            ],
            options={
                'verbose_name': 'report',
                'verbose_name_plural': 'reports',
            },
        ),
        migrations.AddField(
            model_name='page',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='tags', related_query_name='tag', to='web.Tag', verbose_name='tags'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', web.models.UserManager()),
            ],
        ),
    ]
